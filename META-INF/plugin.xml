<idea-plugin version="2">
    <name>GenerateTestCases</name>
    <description><![CDATA[<p>Plugin to generate unit test methods with meaningful names based in described behaviours with @should tags in interface methods javadoc</p>
		 <p>To see how to use it: <a href="http://elespaciodejaime.wordpress.com/2011/05/29/generate-test-cases-intellij-plugin/">http://elespaciodejaime.wordpress.com/2011/05/29/generate-test-cases-intellij-plugin/</a> or <a href="http://plugins.intellij.net/plugin/?idea&id=5847">http://plugins.intellij.net/plugin/?idea&id=5847</a>
		 or for a usage video <a href="http://www.youtube.com/watch?v=WYET6PECxuc">http://www.youtube.com/watch?v=WYET6PECxuc</a>
		 </p>
		 <p>Credits for the @should style testing should go to <a href="https://wiki.openmrs.org/display/docs/Generate+Test+Case+Plugin">OpenMRS</a> team
		 </p>
		 ]]>
    </description>

    <change-notes>
        <![CDATA[
       <p>1.0.9</p>
       <ul>
          <li>Fixed to work with IntelliJ IDEA 12 (thanks to nribeka)</li>
       </ul>
       <p>1.0.8</p>
       <ul>
          <li>Added support for TestNG testing framework</li>
       </ul>
       <p>1.0.7</p>
       <ul>
          <li>Fixed @should descriptions renaming support for IntelliJ IDEA 11</li>
       </ul>
       <p>1.0.6</p>
       <ul>
          <li>Version number increased to update jar in Intellij plugins site</li>
       </ul>
       <p>1.0.5</p>
       <ul>
          <li>Fixed bug when custom source root has been configured# but not created yet</li>
       </ul>
       <p>1.0.4</p>
       <ul>
          <li>Added CTRL+Click functionality to jump to test cases</li>
       </ul>
     ]]>
    </change-notes>

    <vendor url="http://elespaciodejaime.wordpress.com/2011/05/29/generate-test-cases-intellij-plugin/"
            email="hablutzel1@gmail.com"
            logo="/images/junitopenmrs.gif">OpenMRS
    </vendor>

    <version>1.0.9</version>

    <idea-version since-build="123.72"/>
    <application-components>

    </application-components>

    <project-components>
        <component>
            <implementation-class>com.intellij.generatetestcases.model.GenerateTestCasesSettings</implementation-class>
        </component>
        <component>
            <implementation-class>com.intellij.generatetestcases.model.GenerateTestCasesProjectComponent</implementation-class>
        </component>
    </project-components>

    <actions>
        <action id="com.intellij.generatetestcases.actions.GenerateTestMethods"
                class="com.intellij.generatetestcases.actions.GenerateTestMethods" text="Generate Test Methods"
                description="It generates BDD test methods for class">
            <add-to-group group-id="ToolbarRunGroup" anchor="first"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--for settings-->
        <projectConfigurable id="generatetestcases"
                             implementation="com.intellij.generatetestcases.ui.codeinsight.GenerateTestCasesConfigurable"/>
        <!--for inspections of missing test methods -->
        <inspectionToolProvider implementation="com.intellij.generatetestcases.inspection.BddInspectionsToolProvider"/>

        <!--for adding support for @should tag-->
        <javadocTagInfo implementation="com.intellij.generatetestcases.javadoc.ShouldTagInfo"/>

        <!--*****************************************************-->
        <!--for references with renaming support of PsiDocTag-->
        <!--*******************************************************-->

        <psi.referenceContributor implementation="com.intellij.generatetestcases.util.ReferenceContributor"/>
        <!-- dpending on a PsiElement type it suggest names (including the principal one) in the rename dialog-->
        <nameSuggestionProvider
                implementation="com.intellij.generatetestcases.refactor.ShouldDescriptionNameSuggestionProvider"/>

        <!-- rename element processor without support for inline renaming, TODO add support for inline renaming-->
        <renamePsiElementProcessor
                implementation="com.intellij.generatetestcases.refactor.ShouldTagsAwareRenameProccessor" order="first"/>

        <!--********************************************        -->
        <!--For listening to method renamings-->
        <!--**************************************-->
        <refactoring.elementListenerProvider
                implementation="com.intellij.generatetestcases.refactor.listener.TestMethodRefactoringElementListenerProvider"/>

    </extensions>

</idea-plugin>
